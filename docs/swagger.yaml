definitions:
  model.Errors:
    properties:
      field:
        type: string
      message:
        type: string
    type: object
  model.Response:
    properties:
      code:
        example: 400
        type: integer
      errors:
        items:
          $ref: '#/definitions/model.Errors'
        type: array
    type: object
  model.Todo:
    properties:
      author:
        type: string
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
    required:
    - author
    - title
    type: object
info:
  contact: {}
paths:
  /todos:
    get:
      consumes:
      - application/json
      description: get all todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Todo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: List Todos
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: create new todo and save to db
      parameters:
      - description: add todo item
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/model.Todo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Add Todo Item
      tags:
      - todos
  /todos/{id}:
    delete:
      consumes:
      - application/json
      description: Delete todo by todo id
      parameters:
      - description: Todo Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Todo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Delete Todo item
      tags:
      - todos
    get:
      consumes:
      - application/json
      description: get one todo by id
      parameters:
      - description: Todo Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Todo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get one todo
      tags:
      - todos
swagger: "2.0"
